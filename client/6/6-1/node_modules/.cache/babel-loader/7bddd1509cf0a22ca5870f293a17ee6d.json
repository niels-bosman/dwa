{"ast":null,"code":"import _classCallCheck from \"/home/niels/Projects/school/niels-bosman/client/6/6-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/niels/Projects/school/niels-bosman/client/6/6-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/niels/Projects/school/niels-bosman/client/6/6-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/niels/Projects/school/niels-bosman/client/6/6-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/niels/Projects/school/niels-bosman/client/6/6-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/niels/Projects/school/niels-bosman/client/6/6-1/src/components/App.js\";\nimport React from \"react\";\nimport * as ReactRedux from \"react-redux\";\nimport { ItemList } from \"./ItemList\";\nimport { IFrameView } from \"./IFrameView\";\nimport { PreferencesDialog } from \"./Preferences\"; //============================================================================\n//  The React component that renders the UI for the entire App.\n//----------------------------------------------------------------------------\n\nvar AppUI = /*#__PURE__*/function (_React$Component) {\n  _inherits(AppUI, _React$Component);\n\n  function AppUI() {\n    _classCallCheck(this, AppUI);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AppUI).apply(this, arguments));\n  }\n\n  _createClass(AppUI, [{\n    key: \"render\",\n    value: function render() {\n      var contentPanel;\n\n      if (this.props.showingPrefs) {\n        contentPanel = /*#__PURE__*/React.createElement(\"div\", {\n          id: \"ContentPanel\",\n          className: \"preferences\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(PreferencesDialog, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 11\n          }\n        }));\n      } else if (this.props.selectedItem !== null && this.props.selectedItem !== undefined) {\n        contentPanel = /*#__PURE__*/React.createElement(\"div\", {\n          id: \"ContentPanel\",\n          className: \"item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(IFrameView, {\n          url: this.props.selectedItem.url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        contentPanel = /*#__PURE__*/React.createElement(\"div\", {\n          id: \"ContentPanel\",\n          className: \"empty\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }\n        }, \"No item selected yet.\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }\n        }, \"Select an item in the colum on the left.\"));\n      }\n\n      var cssClasses = \"App \" + this.props.color;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: cssClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"ListPanel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ItemList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      })), contentPanel);\n    }\n  }]);\n\n  return AppUI;\n}(React.Component); //============================================================================\n//  Connecting the ItemListUI to the Redux Store results in a new\n//  React component that can talk to the Store, and provide the UI-component\n//  with the data-props it needs.\n//    Note how we don't ask for data or actions that are needed for its\n//  children (ItemList and IFrameView). The ItemList will have its own\n//  connection to the store. The IFrameView can be supplied its URL from\n//  the data that the AppUI needs anyway (the SelectedItem).\n//    Also note that the App does not need any functions to change the state.\n//  Only the ItemList and the PreferencesDialog change parts of the state in\n//  the Redux store.\n//----------------------------------------------------------------------------\n\n\nfunction mapStateToProps(state) {\n  return {\n    selectedItem: state.hnItems.selectedItem,\n    showingPrefs: state.prefs.showingPrefs,\n    color: state.prefs.currentColor\n  };\n}\n\nexport var App = ReactRedux.connect(mapStateToProps)(AppUI);","map":{"version":3,"sources":["/home/niels/Projects/school/niels-bosman/client/6/6-1/src/components/App.js"],"names":["React","ReactRedux","ItemList","IFrameView","PreferencesDialog","AppUI","contentPanel","props","showingPrefs","selectedItem","undefined","url","cssClasses","color","Component","mapStateToProps","state","hnItems","prefs","currentColor","App","connect"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,UAAZ,MAA4B,aAA5B;AAEA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,iBAAT,QAAkC,eAAlC,C,CAEA;AACA;AACA;;IAEMC,K;;;;;;;;;;;6BACK;AACP,UAAIC,YAAJ;;AACA,UAAI,KAAKC,KAAL,CAAWC,YAAf,EAA6B;AAC3BF,QAAAA,YAAY,gBACV;AAAK,UAAA,EAAE,EAAC,cAAR;AAAuB,UAAA,SAAS,EAAC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,OAND,MAMO,IACL,KAAKC,KAAL,CAAWE,YAAX,KAA4B,IAA5B,IACA,KAAKF,KAAL,CAAWE,YAAX,KAA4BC,SAFvB,EAGL;AACAJ,QAAAA,YAAY,gBACV;AAAK,UAAA,EAAE,EAAC,cAAR;AAAuB,UAAA,SAAS,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,UAAD;AAAY,UAAA,GAAG,EAAE,KAAKC,KAAL,CAAWE,YAAX,CAAwBE,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,OATM,MASA;AACLL,QAAAA,YAAY,gBACV;AAAK,UAAA,EAAE,EAAC,cAAR;AAAuB,UAAA,SAAS,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAFF,CADF;AAMD;;AACD,UAAMM,UAAU,GAAG,SAAS,KAAKL,KAAL,CAAWM,KAAvC;AACA,0BACE;AAAK,QAAA,SAAS,EAAED,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIGN,YAJH,CADF;AAQD;;;;EAnCiBN,KAAK,CAACc,S,GAsC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLP,IAAAA,YAAY,EAAEO,KAAK,CAACC,OAAN,CAAcR,YADvB;AAELD,IAAAA,YAAY,EAAEQ,KAAK,CAACE,KAAN,CAAYV,YAFrB;AAGLK,IAAAA,KAAK,EAAEG,KAAK,CAACE,KAAN,CAAYC;AAHd,GAAP;AAKD;;AAED,OAAO,IAAMC,GAAG,GAAGnB,UAAU,CAACoB,OAAX,CAAmBN,eAAnB,EAAoCV,KAApC,CAAZ","sourcesContent":["import React from \"react\";\nimport * as ReactRedux from \"react-redux\";\n\nimport { ItemList } from \"./ItemList\";\nimport { IFrameView } from \"./IFrameView\";\nimport { PreferencesDialog } from \"./Preferences\";\n\n//============================================================================\n//  The React component that renders the UI for the entire App.\n//----------------------------------------------------------------------------\n\nclass AppUI extends React.Component {\n  render() {\n    let contentPanel;\n    if (this.props.showingPrefs) {\n      contentPanel = (\n        <div id=\"ContentPanel\" className=\"preferences\">\n          <PreferencesDialog />\n        </div>\n      );\n    } else if (\n      this.props.selectedItem !== null &&\n      this.props.selectedItem !== undefined\n    ) {\n      contentPanel = (\n        <div id=\"ContentPanel\" className=\"item\">\n          <IFrameView url={this.props.selectedItem.url} />\n        </div>\n      );\n    } else {\n      contentPanel = (\n        <div id=\"ContentPanel\" className=\"empty\">\n          <h2>No item selected yet.</h2>\n          <p>Select an item in the colum on the left.</p>\n        </div>\n      );\n    }\n    const cssClasses = \"App \" + this.props.color;\n    return (\n      <div className={cssClasses}>\n        <div id=\"ListPanel\">\n          <ItemList />\n        </div>\n        {contentPanel}\n      </div>\n    );\n  }\n}\n\n//============================================================================\n//  Connecting the ItemListUI to the Redux Store results in a new\n//  React component that can talk to the Store, and provide the UI-component\n//  with the data-props it needs.\n//    Note how we don't ask for data or actions that are needed for its\n//  children (ItemList and IFrameView). The ItemList will have its own\n//  connection to the store. The IFrameView can be supplied its URL from\n//  the data that the AppUI needs anyway (the SelectedItem).\n//    Also note that the App does not need any functions to change the state.\n//  Only the ItemList and the PreferencesDialog change parts of the state in\n//  the Redux store.\n//----------------------------------------------------------------------------\n\nfunction mapStateToProps(state) {\n  return {\n    selectedItem: state.hnItems.selectedItem,\n    showingPrefs: state.prefs.showingPrefs,\n    color: state.prefs.currentColor\n  };\n}\n\nexport const App = ReactRedux.connect(mapStateToProps)(AppUI);\n"]},"metadata":{},"sourceType":"module"}