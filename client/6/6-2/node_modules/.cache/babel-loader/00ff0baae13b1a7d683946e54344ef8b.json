{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/niels/Projects/school/niels-bosman/client/6/6-2/src/components/ItemList.js\";\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport parseUrl from 'url-parse';\nimport Moment from 'moment';\nimport { Logo } from './Logo';\nimport { SettingsIcon } from './Preferences';\nimport { showPrefsAction, markAsSeen, toggleItemStatus, fetchHNItems, fetchStatuses } from '../reducers'; //============================================================================\n//  The React component that renders the UI for the ItemList\n//----------------------------------------------------------------------------\n\nvar ItemList = function ItemList(props) {\n  // What pieces of the Redux Store should be passed to the ItemListUI as data-props?\n  var statuses = useSelector(function (state) {\n    return state.hnItems.statuses;\n  });\n  var listSize = useSelector(function (state) {\n    return state.prefs.currentListSize;\n  });\n  var selectedItem = useSelector(function (state) {\n    return state.hnItems.selectedItem;\n  });\n  var items = useSelector(function (state) {\n    return state.hnItems.items;\n  });\n  var itemsLoading = useSelector(function (state) {\n    return state.hnItems.itemsLoading;\n  });\n  var error = useSelector(function (state) {\n    return state.hnItems.error;\n  }); // What functions does the ItemListUI need to change the App state?\n  // Note how all functions merely create an Action (using a parameter if needed)\n  //   that they send to the reducers by calling the Redux-supplied function 'dispatch'.\n  // function mapDispatchToProps(dispatch) {\n  //   return {\n  //     doShowPrefs: () => dispatch(showPrefsAction()),\n  //     onMarkAsSeen: listSize => dispatch(markAsSeenAction(listSize)),\n  //     onToggleItem: item => dispatch(toggleItemAction(item))\n  //   };\n  // }\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(fetchHNItems());\n    dispatch(fetchStatuses());\n  }, [dispatch]);\n  var itemsToShow = items.slice(0, listSize); // this also works when listSize > items.length.\n\n  var theItems = itemsToShow.map(function (itm, idx) {\n    return /*#__PURE__*/React.createElement(Item, {\n      item: itm,\n      status: statuses[itm.id],\n      key: itm.id,\n      isSelected: selectedItem && itm.id === selectedItem.id,\n      onToggleItem: function onToggleItem() {\n        return dispatch(toggleItemStatus(itm));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ItemList\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListHeader, {\n    doShowPrefs: function doShowPrefs() {\n      return dispatch(showPrefsAction());\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), itemsLoading ? /*#__PURE__*/React.createElement(Loader, {\n    type: \"Puff\",\n    color: \"orange\",\n    height: 100,\n    width: 100,\n    timeout: 3000 //3 secs\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    id: \"ListMainContent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, theItems), error && /*#__PURE__*/React.createElement(ErrorMessage, {\n    message: error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"markAsSeen\",\n    onClick: function onClick() {\n      return dispatch(markAsSeen(listSize));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Mark all items as \\u201Cseen\\u201D\"), /*#__PURE__*/React.createElement(ListFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }));\n}; //============================================================================\n//  Connecting the ItemListUI to the Redux Store results in a new\n//  React component that can talk to the Store, and provide the UI-component\n//  with both data-props and props containing functions to change the store.\n//----------------------------------------------------------------------------\n// Here a new React component is created that will contain the ItemListUI, and\n// supply it with all the data and functions as props.\n// This connected version of the ItemList component is the one we export to the\n// rest of the app.\n\n\nexport { ItemList }; //============================================================================\n//  A bunch of functional components to help render parts of the ItemList.\n//  Note how we choose not to connect the ListItem component. It can get its\n//  data and functions in the normal react way, because it was never a stateful\n//  component.\n//----------------------------------------------------------------------------\n\nvar ErrorMessage = function ErrorMessage(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    id: \"errorMessage\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 10\n    }\n  }, props.message);\n};\n\nfunction ListHeader(props) {\n  return /*#__PURE__*/React.createElement(\"header\", {\n    id: \"ListHeader\",\n    className: \"panelHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), ' ', /*#__PURE__*/React.createElement(\"span\", {\n    className: \"settingsIcon\",\n    onClick: props.doShowPrefs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SettingsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction ListFooter(props) {\n  return /*#__PURE__*/React.createElement(\"footer\", {\n    id: \"ListFooter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, \"visual design based on\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://blog.trackduck.com/weekly/top-10-hacker-news-redesigns/unknown-author-2/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"this redesign by unknown author\"), \".\");\n}\n\nfunction Item(props) {\n  var statusText;\n\n  switch (props.status) {\n    case 'read':\n      statusText = 'already read';\n      break;\n\n    case 'seen':\n      statusText = 'seen before';\n      break;\n\n    default:\n      statusText = 'new';\n  }\n\n  var domain;\n\n  if (props.item.url) {\n    var hostname = parseUrl(props.item.url).hostname;\n\n    if (hostname.startsWith('www.')) {\n      hostname = hostname.substr(4);\n    }\n\n    domain = /*#__PURE__*/React.createElement(\"span\", {\n      className: \"domain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, \"\\u2003(\", hostname, \", \", statusText, \")\");\n  } // let timeAgo = Moment.unix(props.item.time).fromNow();\n\n\n  var timeAgo = Moment.unix(props.item.time).format('LL');\n  var comments;\n\n  if (props.item.descendants !== undefined) {\n    var commentsUrl = 'https://news.ycombinator.com/item?id=' + encodeURIComponent(props.item.id);\n    comments = /*#__PURE__*/React.createElement(\"a\", {\n      className: \"comments\",\n      href: commentsUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, props.item.descendants), \" comments\");\n  }\n\n  var clickHandler = function clickHandler(evt) {\n    evt.preventDefault();\n    props.onToggleItem(props.item);\n  };\n\n  var cssClasses = 'Item ';\n  cssClasses += props.status || 'new';\n\n  if (props.isSelected) {\n    cssClasses += ' selectedItem';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cssClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"itemTitle\",\n    href: props.item.url,\n    onClick: clickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, props.item.title), domain), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, props.item.score, \" points\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, \"|\"), \"by \", props.item.by, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, \"|\"), timeAgo, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, \"|\"), comments)));\n}","map":{"version":3,"sources":["/home/niels/Projects/school/niels-bosman/client/6/6-2/src/components/ItemList.js"],"names":["React","useEffect","useSelector","useDispatch","Loader","parseUrl","Moment","Logo","SettingsIcon","showPrefsAction","markAsSeen","toggleItemStatus","fetchHNItems","fetchStatuses","ItemList","props","statuses","state","hnItems","listSize","prefs","currentListSize","selectedItem","items","itemsLoading","error","dispatch","itemsToShow","slice","theItems","map","itm","idx","id","ErrorMessage","message","ListHeader","doShowPrefs","ListFooter","Item","statusText","status","domain","item","url","hostname","startsWith","substr","timeAgo","unix","time","format","comments","descendants","undefined","commentsUrl","encodeURIComponent","clickHandler","evt","preventDefault","onToggleItem","cssClasses","isSelected","title","score","by"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\nimport Loader from 'react-loader-spinner'\n\nimport parseUrl from 'url-parse'\nimport Moment from 'moment'\n\nimport { Logo } from './Logo'\nimport { SettingsIcon } from './Preferences'\n\nimport {\n  showPrefsAction,\n  markAsSeen,\n  toggleItemStatus,\n  fetchHNItems,\n  fetchStatuses,\n} from '../reducers'\n\n//============================================================================\n//  The React component that renders the UI for the ItemList\n//----------------------------------------------------------------------------\n\nconst ItemList = (props) => {\n  // What pieces of the Redux Store should be passed to the ItemListUI as data-props?\n  const statuses = useSelector((state) => state.hnItems.statuses)\n  const listSize = useSelector((state) => state.prefs.currentListSize)\n  const selectedItem = useSelector((state) => state.hnItems.selectedItem)\n  const items = useSelector((state) => state.hnItems.items)\n  const itemsLoading = useSelector((state) => state.hnItems.itemsLoading)\n  const error = useSelector((state) => state.hnItems.error)\n\n  // What functions does the ItemListUI need to change the App state?\n  // Note how all functions merely create an Action (using a parameter if needed)\n  //   that they send to the reducers by calling the Redux-supplied function 'dispatch'.\n  // function mapDispatchToProps(dispatch) {\n  //   return {\n  //     doShowPrefs: () => dispatch(showPrefsAction()),\n  //     onMarkAsSeen: listSize => dispatch(markAsSeenAction(listSize)),\n  //     onToggleItem: item => dispatch(toggleItemAction(item))\n  //   };\n  // }\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchHNItems())\n    dispatch(fetchStatuses())\n  }, [dispatch])\n\n  const itemsToShow = items.slice(0, listSize) // this also works when listSize > items.length.\n\n  const theItems = itemsToShow.map((itm, idx) => (\n    <Item\n      item={itm}\n      status={statuses[itm.id]}\n      key={itm.id}\n      isSelected={selectedItem && itm.id === selectedItem.id}\n      onToggleItem={() => dispatch(toggleItemStatus(itm))}\n    />\n  ))\n\n  return (\n    <div className=\"ItemList\">\n      <ListHeader doShowPrefs={() => dispatch(showPrefsAction())} />\n\n      {itemsLoading ? (\n        <Loader\n          type=\"Puff\"\n          color=\"orange\"\n          height={100}\n          width={100}\n          timeout={3000} //3 secs\n        />\n      ) : (\n        <div id=\"ListMainContent\">{theItems}</div>\n      )}\n\n      {error && <ErrorMessage message={error} />}\n\n      <button id=\"markAsSeen\" onClick={() => dispatch(markAsSeen(listSize))}>\n        Mark all items as “seen”\n      </button>\n      <ListFooter />\n    </div>\n  )\n}\n//============================================================================\n//  Connecting the ItemListUI to the Redux Store results in a new\n//  React component that can talk to the Store, and provide the UI-component\n//  with both data-props and props containing functions to change the store.\n//----------------------------------------------------------------------------\n\n// Here a new React component is created that will contain the ItemListUI, and\n// supply it with all the data and functions as props.\n// This connected version of the ItemList component is the one we export to the\n// rest of the app.\n\nexport { ItemList }\n\n//============================================================================\n//  A bunch of functional components to help render parts of the ItemList.\n//  Note how we choose not to connect the ListItem component. It can get its\n//  data and functions in the normal react way, because it was never a stateful\n//  component.\n//----------------------------------------------------------------------------\nconst ErrorMessage = (props) => {\n  return <button id=\"errorMessage\">{props.message}</button>\n}\n\nfunction ListHeader(props) {\n  return (\n    <header id=\"ListHeader\" className=\"panelHeader\">\n      <Logo />{' '}\n      <span className=\"settingsIcon\" onClick={props.doShowPrefs}>\n        <SettingsIcon />\n      </span>\n    </header>\n  )\n}\n\nfunction ListFooter(props) {\n  return (\n    <footer id=\"ListFooter\">\n      visual design based on{' '}\n      <a href=\"http://blog.trackduck.com/weekly/top-10-hacker-news-redesigns/unknown-author-2/\">\n        this redesign by unknown author\n      </a>\n      .\n    </footer>\n  )\n}\n\nfunction Item(props) {\n  let statusText\n  switch (props.status) {\n    case 'read':\n      statusText = 'already read'\n      break\n    case 'seen':\n      statusText = 'seen before'\n      break\n    default:\n      statusText = 'new'\n  }\n  let domain\n  if (props.item.url) {\n    let hostname = parseUrl(props.item.url).hostname\n    if (hostname.startsWith('www.')) {\n      hostname = hostname.substr(4)\n    }\n    domain = (\n      <span className=\"domain\">\n        &emsp;({hostname}, {statusText})\n      </span>\n    )\n  }\n  // let timeAgo = Moment.unix(props.item.time).fromNow();\n  let timeAgo = Moment.unix(props.item.time).format('LL')\n  let comments\n  if (props.item.descendants !== undefined) {\n    let commentsUrl =\n      'https://news.ycombinator.com/item?id=' +\n      encodeURIComponent(props.item.id)\n    comments = (\n      <a className=\"comments\" href={commentsUrl}>\n        <strong>{props.item.descendants}</strong> comments\n      </a>\n    )\n  }\n  let clickHandler = (evt) => {\n    evt.preventDefault()\n    props.onToggleItem(props.item)\n  }\n  let cssClasses = 'Item '\n  cssClasses += props.status || 'new'\n  if (props.isSelected) {\n    cssClasses += ' selectedItem'\n  }\n\n  return (\n    <div className={cssClasses}>\n      <div className=\"mainInfo\">\n        <div>\n          <a className=\"itemTitle\" href={props.item.url} onClick={clickHandler}>\n            {props.item.title}\n          </a>\n          {domain}\n        </div>\n        <div className=\"info\">\n          {props.item.score} points\n          <span className=\"divider\">|</span>\n          by {props.item.by}\n          <span className=\"divider\">|</span>\n          {timeAgo}\n          <span className=\"divider\">|</span>\n          {comments}\n        </div>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}