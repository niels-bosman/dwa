{"ast":null,"code":"var _jsxFileName = \"/home/niels/Projects/school/niels-bosman/client/6/6-2/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Redux from 'redux';\nimport * as ReactRedux from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { mainReducer } from './reducers';\nimport { App } from './components/App';\nimport './main.css'; // The logger middleware is adapted from code out of http://www.pro-react.com/materials/ch06-alt-redux.pdf.\n// We use it because it is also useful to see the redux-actions happening in the normal console\n// (together with error-messages).\n\nvar logger = function logger(store) {\n  return function (next) {\n    return function (action) {\n      console.log('ACTION:', action.type, action);\n      var result = next(action);\n      console.log('STATE AFTER ACTION:', action.type, store.getState());\n      return result;\n    };\n  };\n}; // There are a few different ways you can connect the Redux App to the Redux DevTools.\n// This code (adapted from https://github.com/zalmoxisus/redux-devtools-extension#12-advanced-store-setup)\n// is the version you need if you use Redux middleware:\n\n\nvar theStore = Redux.createStore(mainReducer, composeWithDevTools(Redux.applyMiddleware(thunkMiddleware, logger))); // const theStore = Redux.createStore(mainReducer);\n\nvar mainComponent = /*#__PURE__*/React.createElement(ReactRedux.Provider, {\n  store: theStore,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n}));\nReactDOM.render(mainComponent, document.getElementById('react-root'));","map":{"version":3,"sources":["/home/niels/Projects/school/niels-bosman/client/6/6-2/src/index.js"],"names":["React","ReactDOM","Redux","ReactRedux","thunkMiddleware","composeWithDevTools","mainReducer","App","logger","store","next","action","console","log","type","result","getState","theStore","createStore","applyMiddleware","mainComponent","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,UAAZ,MAA4B,aAA5B;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,WAAT,QAA4B,YAA5B;AAEA,SAASC,GAAT,QAAoB,kBAApB;AAEA,OAAO,YAAP,C,CAEA;AACA;AACA;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD;AAAA,SAAW,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAY;AAC9CC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAM,CAACG,IAA9B,EAAoCH,MAApC;AACA,UAAII,MAAM,GAAGL,IAAI,CAACC,MAAD,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,MAAM,CAACG,IAA1C,EAAgDL,KAAK,CAACO,QAAN,EAAhD;AACA,aAAOD,MAAP;AACD,KALyB;AAAA,GAAX;AAAA,CAAf,C,CAOA;AACA;AACA;;;AACA,IAAME,QAAQ,GAAGf,KAAK,CAACgB,WAAN,CACfZ,WADe,EAEfD,mBAAmB,CAACH,KAAK,CAACiB,eAAN,CAAsBf,eAAtB,EAAuCI,MAAvC,CAAD,CAFJ,CAAjB,C,CAKA;;AAEA,IAAMY,aAAa,gBACjB,oBAAC,UAAD,CAAY,QAAZ;AAAqB,EAAA,KAAK,EAAEH,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF;AAMAhB,QAAQ,CAACoB,MAAT,CAAgBD,aAAhB,EAA+BE,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAA/B","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport * as Redux from 'redux'\nimport * as ReactRedux from 'react-redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { mainReducer } from './reducers'\n\nimport { App } from './components/App'\n\nimport './main.css'\n\n// The logger middleware is adapted from code out of http://www.pro-react.com/materials/ch06-alt-redux.pdf.\n// We use it because it is also useful to see the redux-actions happening in the normal console\n// (together with error-messages).\nconst logger = (store) => (next) => (action) => {\n  console.log('ACTION:', action.type, action)\n  let result = next(action)\n  console.log('STATE AFTER ACTION:', action.type, store.getState())\n  return result\n}\n\n// There are a few different ways you can connect the Redux App to the Redux DevTools.\n// This code (adapted from https://github.com/zalmoxisus/redux-devtools-extension#12-advanced-store-setup)\n// is the version you need if you use Redux middleware:\nconst theStore = Redux.createStore(\n  mainReducer,\n  composeWithDevTools(Redux.applyMiddleware(thunkMiddleware, logger))\n)\n\n// const theStore = Redux.createStore(mainReducer);\n\nconst mainComponent = (\n  <ReactRedux.Provider store={theStore}>\n    <App />\n  </ReactRedux.Provider>\n)\n\nReactDOM.render(mainComponent, document.getElementById('react-root'))\n"]},"metadata":{},"sourceType":"module"}