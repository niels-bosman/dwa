{"ast":null,"code":"var _jsxFileName = \"/home/niels/Projects/school/niels-bosman/client/5/5-2/src/components/PreferenceDialog.jsx\";\nimport React, { useState } from 'react';\n\nconst PreferenceDialog = ({\n  itemAmount,\n  color,\n  maxItems,\n  onSave,\n  ...rest\n}) => {\n  const [localAmount, setLocalAmount] = useState(itemAmount);\n  const [localColor, setLocalColor] = useState(color);\n\n  const onAmountChange = e => setLocalAmount(parseInt(e.target.value));\n\n  const onColorChange = e => setLocalColor(e.target.value);\n\n  const validAmountInput = localAmount <= maxItems && localAmount > 0;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"ContentPanel\",\n    className: \"preferences\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PreferencesDialog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"colored\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"RrHN\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Settings\"))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"listSizeField\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Show\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"listSizeField\",\n    className: !validAmountInput ? 'warning' : '',\n    value: localAmount,\n    onChange: onAmountChange,\n    max: maxItems,\n    min: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }), \"items in the list.\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"colorField\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"color:\", /*#__PURE__*/React.createElement(\"select\", {\n    value: localColor,\n    onChange: onColorChange,\n    id: \"colorField\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"orange\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"green\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"brown\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dialogButtons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      onSave(localAmount, localColor);\n      rest.history.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"OK\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => rest.history.goBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};\n\nexport default PreferenceDialog;","map":{"version":3,"sources":["/home/niels/Projects/school/niels-bosman/client/5/5-2/src/components/PreferenceDialog.jsx"],"names":["React","useState","PreferenceDialog","itemAmount","color","maxItems","onSave","rest","localAmount","setLocalAmount","localColor","setLocalColor","onAmountChange","e","parseInt","target","value","onColorChange","validAmountInput","history","goBack"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,QAArB;AAA+BC,EAAAA,MAA/B;AAAuC,KAAGC;AAA1C,CAAD,KAAsD;AAC7E,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAACE,UAAD,CAA9C;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAAgCV,QAAQ,CAACG,KAAD,CAA9C;;AAEA,QAAMQ,cAAc,GAAGC,CAAC,IAAIJ,cAAc,CAACK,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAT,CAA1C;;AACA,QAAMC,aAAa,GAAIJ,CAAC,IAAIF,aAAa,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAzC;;AAEA,QAAME,gBAAgB,GAAGV,WAAW,IAAIH,QAAf,IAA2BG,WAAW,GAAG,CAAlE;AAEA,sBACE;AAAK,IAAA,EAAE,EAAC,cAAR;AAAuB,IAAA,SAAS,EAAC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,CADF,eAOE;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,EAAE,EAAC,eAFL;AAGE,IAAA,SAAS,EAAE,CAACU,gBAAD,GAAoB,SAApB,GAAgC,EAH7C;AAIE,IAAA,KAAK,EAAEV,WAJT;AAKE,IAAA,QAAQ,EAAEI,cALZ;AAME,IAAA,GAAG,EAAEP,QANP;AAOE,IAAA,GAAG,EAAE,CAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,uBAPF,eAoBE;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE;AAAQ,IAAA,KAAK,EAAEK,UAAf;AAA2B,IAAA,QAAQ,EAAEO,aAArC;AAAoD,IAAA,EAAE,EAAC,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CAFF,CApBF,eA4BE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAM;AACrBX,MAAAA,MAAM,CAACE,WAAD,EAAcE,UAAd,CAAN;AACAH,MAAAA,IAAI,CAACY,OAAL,CAAaC,MAAb;AACD,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAME;AAAQ,IAAA,OAAO,EAAE,MAAMb,IAAI,CAACY,OAAL,CAAaC,MAAb,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,CA5BF,CADF,CADF;AAyCD,CAlDD;;AAoDA,eAAelB,gBAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst PreferenceDialog = ({ itemAmount, color, maxItems, onSave, ...rest }) => {\n  const [localAmount, setLocalAmount] = useState(itemAmount);\n  const [localColor, setLocalColor]   = useState(color);\n\n  const onAmountChange = e => setLocalAmount(parseInt(e.target.value));\n  const onColorChange  = e => setLocalColor(e.target.value);\n\n  const validAmountInput = localAmount <= maxItems && localAmount > 0;\n\n  return (\n    <div id=\"ContentPanel\" className=\"preferences\">\n      <div className=\"PreferencesDialog\">\n        <header>\n          <div className=\"Logo\">\n            <div className=\"colored\">RrHN</div>\n            <div className=\"title\">Settings</div>\n          </div>\n        </header>\n        <label htmlFor=\"listSizeField\">\n          Show\n          <input\n            type=\"number\"\n            id=\"listSizeField\"\n            className={!validAmountInput ? 'warning' : ''}\n            value={localAmount}\n            onChange={onAmountChange}\n            max={maxItems}\n            min={1}\n          />\n          items in the list.\n        </label>\n        <label htmlFor=\"colorField\">\n          color:\n          <select value={localColor} onChange={onColorChange} id=\"colorField\">\n            <option>orange</option>\n            <option>green</option>\n            <option>brown</option>\n          </select>\n        </label>\n        <div className=\"dialogButtons\">\n          <button onClick={() => {\n            onSave(localAmount, localColor);\n            rest.history.goBack();\n          }}>OK\n          </button>\n          <button onClick={() => rest.history.goBack()}>Cancel</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PreferenceDialog;"]},"metadata":{},"sourceType":"module"}