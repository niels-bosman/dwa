{"ast":null,"code":"var _jsxFileName = \"/home/niels/Projects/school/niels-bosman/client/4/src/components/ItemList.jsx\";\nimport React from 'react';\nimport { ListItem } from './ListItem';\nexport class ItemList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      statuses: []\n    };\n\n    this.onSelectItem = async selected => {\n      this.props.onSelectItem(selected);\n      await fetch(`http://localhost:3000/itemStatuses/${selected.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'text/plain'\n        },\n        body: 'seen'\n      });\n      await this.fetchStatuses();\n    };\n  }\n\n  async componentDidMount() {\n    await this.fetchStatuses();\n  }\n\n  render() {\n    let items;\n\n    if (this.props.amount <= this.props.items.length) {\n      items = this.props.items.slice(0, this.props.amount);\n    } else {\n      items = this.props.items;\n    }\n\n    return items.map(item => {\n      var _this$props$selected, _this$state$statuses$;\n\n      return /*#__PURE__*/React.createElement(ListItem, {\n        item: item,\n        selected: ((_this$props$selected = this.props.selected) === null || _this$props$selected === void 0 ? void 0 : _this$props$selected.id) === item.id,\n        status: (_this$state$statuses$ = this.state.statuses[item.id]) !== null && _this$state$statuses$ !== void 0 ? _this$state$statuses$ : null,\n        key: item.id,\n        onSelectItem: this.onSelectItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/niels/Projects/school/niels-bosman/client/4/src/components/ItemList.jsx"],"names":["React","ListItem","ItemList","Component","state","statuses","onSelectItem","selected","props","fetch","id","method","headers","body","fetchStatuses","componentDidMount","render","items","amount","length","slice","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAC5CC,KAD4C,GACpC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KADoC;;AAAA,SAS5CC,YAT4C,GAS7B,MAAMC,QAAN,IAAkB;AAC/B,WAAKC,KAAL,CAAWF,YAAX,CAAwBC,QAAxB;AAEA,YAAME,KAAK,CAAE,sCAAqCF,QAAQ,CAACG,EAAG,EAAnD,EAAsD;AAC/DC,QAAAA,MAAM,EAAE,KADuD;AAE/DC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFsD;AAG/DC,QAAAA,IAAI,EAAE;AAHyD,OAAtD,CAAX;AAMA,YAAM,KAAKC,aAAL,EAAN;AACD,KAnB2C;AAAA;;AAGrB,QAAjBC,iBAAiB,GAAG;AACxB,UAAM,KAAKD,aAAL,EAAN;AACD;;AAgBDE,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAJ;;AAEA,QAAI,KAAKT,KAAL,CAAWU,MAAX,IAAqB,KAAKV,KAAL,CAAWS,KAAX,CAAiBE,MAA1C,EAAkD;AAChDF,MAAAA,KAAK,GAAG,KAAKT,KAAL,CAAWS,KAAX,CAAiBG,KAAjB,CAAuB,CAAvB,EAA0B,KAAKZ,KAAL,CAAWU,MAArC,CAAR;AACD,KAFD,MAEO;AACLD,MAAAA,KAAK,GAAG,KAAKT,KAAL,CAAWS,KAAnB;AACD;;AAED,WAAOA,KAAK,CAACI,GAAN,CAAUC,IAAI;AAAA;;AAAA,0BACnB,oBAAC,QAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAEE,QAAA,QAAQ,EAAE,8BAAKd,KAAL,CAAWD,QAAX,8EAAqBG,EAArB,MAA4BY,IAAI,CAACZ,EAF7C;AAGE,QAAA,MAAM,2BAAE,KAAKN,KAAL,CAAWC,QAAX,CAAoBiB,IAAI,CAACZ,EAAzB,CAAF,yEAAkC,IAH1C;AAIE,QAAA,GAAG,EAAEY,IAAI,CAACZ,EAJZ;AAKE,QAAA,YAAY,EAAE,KAAKJ,YALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADmB;AAAA,KAAd,CAAP;AASD;;AAvC2C","sourcesContent":["import React from 'react';\n\nimport { ListItem } from './ListItem';\n\nexport class ItemList extends React.Component {\n  state = { statuses: [] }\n\n  async componentDidMount() {\n    await this.fetchStatuses();\n  }\n\n\n\n  onSelectItem = async selected => {\n    this.props.onSelectItem(selected);\n\n    await fetch(`http://localhost:3000/itemStatuses/${selected.id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'text/plain' },\n      body: 'seen',\n    });\n\n    await this.fetchStatuses();\n  }\n\n  render() {\n    let items;\n\n    if (this.props.amount <= this.props.items.length) {\n      items = this.props.items.slice(0, this.props.amount);\n    } else {\n      items = this.props.items;\n    }\n\n    return items.map(item => (\n      <ListItem\n        item={item}\n        selected={this.props.selected?.id === item.id}\n        status={this.state.statuses[item.id] ?? null}\n        key={item.id}\n        onSelectItem={this.onSelectItem}\n      />\n    ));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}